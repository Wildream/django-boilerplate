---
- name:  Change owner for run/celery
  become: yes
  file: path={{ deploy_run_dir }}/celery
        owner={{ deploy_user }}
        group={{deploy_user }}

- name: Change owner for venv folder
  become: yes
  file: dest={{ virtualenv_dir }} state=directory
        owner={{ deploy_user }} group={{ deploy_user }}
        mode=0775
        recurse=yes

- name: Git | Pull sources from the repository
  git:
   dest: '{{ api_src_dir }}'
   repo: '{{ api_repo }}'
   version: '{{ api_repo_branch }}'
   force: yes
   update: yes
   accept_hostkey: yes
  when: not skip_checkout
  register: site_git_clone
  tags: [provision, api]

- name: Check nginx syntax of configuration files
  become: yes
  shell: nginx -t
  register: result
  changed_when: "result.rc != 0"
  always_run: yes

- name: Copy local settings file
  copy:
    content: '{{ django_local_settings }}'
    dest: '{{ django_local_settings_file }}'
  when: django_local_settings_file is defined
  tags: [provision, api]


- name: PIP | Install requirements
  become: yes
  pip:
    requirements: '{{ item }}'
    virtualenv: '{{ virtualenv_dir }}'
    state: present
  with_items: '{{ pip_requirements }}'
  tags: [provision, api]

- name: Django | Migrate database
  django_manage:
    command: migrate
    settings: '{{ django_settings }}'
    app_path: '{{ django_dir }}'
    virtualenv: '{{ virtualenv_dir }}'
  tags: [provision, api]

#- name: Django | Load fixtures
#  become: yes
#  django_manage:
#    command: loaddata
#    fixtures: '{{ item }}'
#    settings: '{{ django_settings }}'
#    app_path: '{{ django_dir }}'
#    virtualenv: '{{ virtualenv_dir }}'
#  with_items: '{{ django_fixtures }}'
#  when: site_git_clone.changed or force_upgrade
#  tags: [provision, api]

- name: Django | Collect static assets
  django_manage:
    command: collectstatic
    settings: '{{ django_settings }}'
    app_path: '{{ django_dir }}'
    virtualenv: '{{ virtualenv_dir }}'
  tags: [provision, api]

- name: Restart services
  become: yes
  always_run: yes
  notify:
    - Restart gunicorn
    - restart nginx
    - restart celery
    - restart redis
    - restart flower
    - restart tornado
  command: 'true'