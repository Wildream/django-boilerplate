---

### NGINX ###
nginx_user: "{{ deploy_user }}"
nginx_max_clients: 512
nginx_configs:
  gzip:
    - |
      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_min_length 1000;
      gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg image/x-icon image/bmp;
 
  upstream:
    - |
      upstream {{ deploy_app_name }}_webapp  {
        server {{ webapp_host }}:{{ webapp_port }};
        keepalive 64;
      }
    - |
      upstream {{ deploy_app_name }}_api  {
        server {{ gunicorn_bind }} fail_timeout=0;
      }

nginx_sites:
  webapp:
    - |
      listen 80;

      charset utf-8;
      server_tokens off;

      server_name {{ site_domain }};

      access_log {{ deploy_log_dir }}/nginx-access.log;
      error_log {{ deploy_log_dir }}/nginx-error.log;

      client_max_body_size 10M; # Max upload size

      location / {
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Connection "";
        proxy_http_version 1.1;

        proxy_pass http://{{ deploy_app_name }}_webapp;
      }

  api:
    - |
      listen 80;

      charset utf-8;
      server_tokens off;

      server_name {{ api_domain }};

      access_log {{ deploy_log_dir }}/nginx-access.log;
      error_log {{ deploy_log_dir }}/nginx-error.log;

      client_max_body_size 10M; # Max upload size

      location {{ django_static_url }} {
          alias {{ django_static_root }};
          access_log off;
          expires max;
      }

      location / {
          proxy_read_timeout 300;
          proxy_connect_timeout 300;
          proxy_redirect off;

          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;

          proxy_pass http://{{ deploy_app_name }}_api;
      }

  flower:
    - |
      listen 80;
      server_name {{ flower_domain }};
      charset utf-8;

      auth_basic "Restricted";
      auth_basic_user_file auth_basic/flower;

      location / {
        proxy_pass http://{{ flower_host }}:{{ flower_port }};
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

  tornado:
    - |
      listen 80;
      server_name {{ tornado_domain }};
      charset utf-8;

      location / {
        proxy_pass http://{{ tornado_host }}:{{ tornado_port }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

  docs:
    - |
      listen 80;
      server_name {{ docs_domain }};
      charset utf-8;

      location / {
        proxy_pass http://{{ docs_host }}:{{ docs_port }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

  # CSRF protect
  csrf_protect:
    - |
      listen 80 default_server;
      return 444;

nginx_remove_sites: [default]

nginx_auth_basic_files:
  flower:
   - boilerplate_flower:$apr1$aCfYFo4h$hUa79ExUZtO11S/4ttlJ/0 # boilerplate_flower:password , generated by : htpasswd -nb boilerplate_flower password
